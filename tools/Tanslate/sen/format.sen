1:en:Chapter 1
1:cn:第一章 
2:en:contains motivational material and also presents some background issues in computer architecture and programming-language principles.
2:cn:给出一些关于学习动机的资料，同时也将给出一些关于计算机体系结构和程序设计  语言原则的背景知识。
3:en:Chapter 2
3:cn:第二章 
4:en:develops a miniature compiler and introduces many of the important concepts, which are then developed in later chapters.
4:cn:开发一个小型的编译器，并介绍很多重要概念。这些概念将在后面的各章中深入介绍。
5:en:The compiler itself appears in the appendix.
5:cn:这个编译器本身将在附录中给出。
6:en:Chapter 3
6:cn:第三章 
7:en:covers lexical analysis, regular expressions, finite-state machines, and scanner-generator tools.
7:cn:将讨论词法分析，正则表达式，有穷状态自动机和词法分析器的生成器工具。
8:en:This material is fundamental to text-processing of all sorts.
8:cn:这些内容是各种文本处理的基础。
9:en:Chapter 4
9:cn:第四章 
10:en:covers the major parsing methods, top-down (recursive-descent, LL) and bottom-up (LR and its variants).
10:cn:  将讨论主流的词法分析方法，包括自顶向下方法 （递归下降法，LL  技术）和自底向上方法（LR技术和它的变体）。 
11:en:Chapter 5
11:cn:第五章 
12:en:introduces the principal ideas in syntax-directed definitions and syntax-directed translations.
12:cn:介绍语法制导定义和语法制导翻译的基本思想。 
13:en:Chapter 6
13:cn:第六章
14:en:
takes the theory of Chapter 5 and shows how to use it to generate intermediate code for a typical programming language.
14:cn:  使用第五章的理论。并说明如何使用这些理论为一个典型的程序设计语言生成中间代码。 
15:en:Chapter 7
15:cn:第七章
16:en:covers run-time environments, especially management of the run-time stack and garbage collection.
16:cn:讨论运行时刻环境，特别是运行时刻栈的管理和垃圾回收机制。 
17:en:Chapter 8
17:cn:第八章 
18:en:is on object-code generation.
18:cn:讨论目标代码生成技术。 
19:en:It covers construction of basic blocks, generation of code from expressions and basic blocks, and register-allocation techniques.
20:cn:讨论基本块的构造，从表达式和基本块生成代码的方法，以及寄存器分配技术。 
21:en:Chapter 9
21:cn:第九章 
22:en:introduces the technology of code optimization, including flow graphs, data-flow frameworks, and iterative algorithms for solving these frameworks.
22:cn:介绍代码优化技术，包括流图，数据流分析框架以及求解这些框架的迭代算法。
23:en:Chapter 10
23:cn:第十章
24:en:covers instruction-level optimization.
24:cn:  讨论指令级优化。
25:en:The emphasis is on the extraction of parallelism from small sequences of instructions and scheduling them on single processors that can do more than one thing at once.
25:cn: 该章的重点是从小段指令代码中抽取并行性，  并在那些可以同时做很多件事情的单处理器上调度这些指令。
26:en:Chapter 11
26:cn:第十一章
27:en:talks about larger-scale parallelism detection and exploitation.
27:cn:介绍大规模并行性的检测和利用。
28:en:Here, the emphasis is on numeric codes that have many tight loops that range over multidimensional arrays.
28:cn: 这里的重点是数值计算代码，这些代码具有对多维数组进行遍历的紧致循环。
29:en:Chapter 12
29:cn:第十二章 
30:en:is on interprocedural analysis.
30:cn:介绍过程间分析技术。
31:en:It covers pointer analysis, aliasing, and data-flow analysis that takes into account the sequence of procedure calls that reach a given point in the code.
31:cn: 他将讨论指针分析，别名和数据流分析。
这些分析都考虑了到达代码中某个给定点时的过程调用序列。

=end
 
