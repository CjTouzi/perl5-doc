2.4. Exercises
2.4. 习题
You can find the answers to these exercises in "Answers for Chapter 2" in the Appendix.
答案在附录中的“第二章的答案”中；
2.4.1. Exercise 1 [15 min]
2.4.1. 习题 1 [15 分钟]
Write a program that takes a list of filenames on the command line and uses grep to select the ones whose size in bytes is less than 1000. Use map to transform the strings in this list, putting four space characters in front of each and a newline character after. Print the resulting list.
写一个程序从命令行取一个文件清单，然后用grep把那些文件大小在1000字节以内的文件找出来。用map把这个清单里的每个字串前加四个空格并在字串后面加上换行符。然后输出列表结果。
2.4.2. Exercise 2 [25 min]
2.4.2. 练习 2 [25 分钟]
Write a program that asks the user to enter a pattern (regular expression). Read this as data from the keyboard; don’t get it from the command-line arguments. Report a list of files in some hardcoded directory (such as "/etc" or ‘C:\\Windows’) whose names match the pattern. Repeat this until the user enters an empty string instead of a pattern. The user should not type the forward slashes that are traditionally used to delimit pattern matches in Perl; the input pattern is delimited by the trailing newline. Ensure that a faulty pattern, such as one with unbalanced parentheses, doesn’t crash the program.
写一个程序要求用户输入一个正则表达式的模板。不要以命令行参数形式输入，要从键盘读取。然后从一些目录中（可以是硬编码的，如： "/etc" 或 ‘C:\\Windows’）中读取符合模板的文件名。重复这个操作直到用户输入空串。要屏蔽用户输入的正斜杠("/"),因为那是Perl里正则表达式的分隔符；输入的模板用换行符为分隔。要保证不会因为用户输入了一个错误的正则表达式，如括号不匹配之类的，而导致程序崩溃。


