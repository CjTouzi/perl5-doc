=EN The Old Way
=CN 旧的方法
=EN In the olden days, Perl used barewords for filehandle names.
=CN 在以往的日子里, Perl用裸字来代表文件句柄.
=EN The filehandle is another Perl data type, although people don't talk about it too much since it doesn't get its own special sigil. 
=CN 文件句柄是另一种Perl的数据类型, 尽管人们对此讨论不多, 因为它也没有专门的符号标注.
=EN You've probably already seen a lot of code that uses these bareword filehandles. 
=CN 你大概已经许多用裸字文件句柄的代码, 如：
=EN What happens if we want to pass around these filehandles so we could share them with other parts of our code, such as libraries? You've probably seen some tricky looking code that uses a typeglob or a reference to a typeglob. 
=CN 如果我们要同程序的其它部份, 比如库, 共享这些文件句柄该如何做呢？ 我们大概见过一些讨巧的办法, 用typeglob或一个对typeglob的引用来处理. 
=EN In the log_message( ) routine, we take the first element off of the argument list and store it in another typeglob. Without going into too many details, a typeglob stores pointers to all the package variables of that name. When we assign one typeglob to another, we create aliases to the same data. We can now access the data, including the details of the filehandle, from another name. Then, when we use that name as a filehandle, Perl knows to look for the filehandle portion of the typeglob. We'd have a much easier time if filehandles had sigils!
=CN 在log_message( ) 子程序中, 我们从参数列表中取下第一个元素, 并且存在另一个typeglob中. 不需要详述太多的细节, 一个typeglob存储了包里面所有变量的名字的指针. 当我们把一个typeglob赋值给另一个的时候, 我们就为相同的数据创建了一个别名. 这样我们现在就可以用另外一个名字来访问这块数据的文件句柄了. 如此, 当我们把名字当文件句柄用时, Perl知道在typeglob中找到这个名字的文件句柄部份. 如果文件句柄已经有符号, 那会更容易. 
=EN Notice the use of local there. A typeglob works with the symbol table, which means it's dealing with package variables. Package variables can't be lexical variables, so we can't use my. Since we don't want to stomp on anything else that might be named FH somewhere else in the script, we must use local to say that the name FH has a temporary value for the duration of the log_message subroutine and that when the subroutine finishes, Perl should restore any previous values to FH as if we were never there. 
=CN 注意这里local的用法. 一个typeglob同符号表一起工作, 这意味着它处理包变量. 包变量不能是词法变量, 所以我们不能用my. 因为我们不能与程序其它部份的以FH命名的句柄混淆, 我们必须用local告诉Perl这个FH是在log_message子程序中用作临时变量, 用完即丢, Perl会把原来的FH句柄恢复, 好像没有发生过一样. 
=EN If all of that makes you nervous and wish that none of this stuff existed, that's good. 
=CN 如果这一切作法让你大为紧张, 希望没有这种事该多好, 可以. 
=EN Don't do this anymore! 
=CN 我们不用作这种事情！
=EN We put it in a section called "The Old Way" because there is a much better way to do it now.
=CN 就是因为现在有更好的方法, 所以我们把这节叫作"旧的方法".
=EN Pretend this section never existed and move on to the next one. 
=CN 我们假装没有这节吧, 直接跳到下一节吧. 
