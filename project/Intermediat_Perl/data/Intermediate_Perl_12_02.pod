=EN 12.2. Invoking an Instance Method
=CN 12.2. 调用一个实例方法
=EN The method arrow can be used on instances, as well as names of packages (classes). Let’s get the sound that $tv_horse makes:
=CN 方法箭头可以用在实例上， 就像用在包名上（类）一样。让我们用$tv_horse发声：

my $noise = $tv_horse->sound;

=EN To invoke sound, Perl first notes that $tv_horse is a blessed reference, and thus an instance. Perl then constructs an argument list, similar to the way an argument list was constructed when we used the method arrow with a class name. In this case, it’ll be just ($tv_horse). (Later we’ll show that arguments will take their place following the instance variable, just as with classes.)
=CN 为了调用sound方法， Perl首先注意到$tvHorse是一个“被祝福”的引用， 所以是一个对象实例。 于是Perl创建一个参数列表， 有些像当我们用类名加方法箭头那种形式。 在这个例子中， 它就是($tv_horse)。 （之后我们会展示参数将跟在实例变量后面，就像跟着类一样。）
=EN Now for the fun part: Perl takes the class in which the instance was blessed, in this case, Horse, and uses it to locate and invoke the method, as if we had said Horse->sound instead of $tv_horse->sound. The purpose of the original blessing is to associate a class with that reference to allow Perl to find the proper method.
=CN 现在有趣的地方来了：Perl被祝福的实例中的类，在这个例子中是Horse,并用它来定位并调用方法， 就好像我们用的是Horse->sound而不是$tv_horse->sound一样。 最初所谓的“祝福”的目的就是把一个类和它的引用关联起来，让Perl能找到适当的方法。
=EN In this case, Perl finds Horse::sound directly (without using inheritance), yielding the final subroutine invocation:
=CN 在此例中， Perl直接找到Horse::sound(没有用到继承)， 也就是最终的子程序调用：

Horse::sound($tv_horse)

=EN Note that the first parameter here is still the instance, not the name of the class as before. neigh is the return value, which ends up as the earlier $noise variable.
=CN 注意这里第一个参数仍旧是实例， 不是像以前一样的类名。 "neigh"是输出值，像以往$noise变量一样。
=EN If Perl did not find Horse::sound, it would walk up the @Horse::ISA list to try to find the method in one of the superclasses, just as for a class method. The only difference between a class method and an instance method is whether the first parameter is an instance (a blessed reference) or a class name (a string).[*]
=CN 如果Perl没有找到Horse::sound， 那么它会根据@Horse::ISA列表回溯在父类中查找方法， 就象对类方法的操作一样。 类方法和实例方法的区别是第一个参数是否为实例（一个被祝福过的引用）或一个类名（一个字串）.[*]
=EN [*] This is perhaps different from other OOP languages with which you may be familiar.
=CN [*] 这同你可能熟悉的其它面向对象语言有所不同。
